using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.CompilerServices;
using System.Threading;
using System.Windows.Forms;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;
using ns0;

// Token: 0x020000B7 RID: 183
[DesignerGenerated]
public partial class ReExploiter : Form
{
	// Token: 0x06000A85 RID: 2693 RVA: 0x0004135C File Offset: 0x0003F55C
	public ReExploiter()
	{
		base.Load += this.ReExploiter_Load;
		base.FormClosing += this.ReExploiter_FormClosing;
		this.Count = 0;
		this.CanClose = true;
		this.InitializeComponent();
		this.lblStatus.Text = "";
		this.numericUpDown_0 = new NumericUpDown();
		this.numericUpDown_0.Minimum = 1m;
		this.numericUpDown_0.Maximum = 200m;
		this.numericUpDown_0.Increment = 10m;
		this.numericUpDown_0.Value = 20m;
		ToolStripControl toolStripControl = new ToolStripControl(this.numericUpDown_0);
		toolStripControl.Alignment = ToolStripItemAlignment.Right;
		this.tsWorker.Items.Add(toolStripControl);
		this.toolStripLabel_0 = new ToolStripLabel();
		this.toolStripLabel_0.Text = global::Globals.GMain.toolStripLabel_1.Text;
		this.toolStripLabel_0.Alignment = ToolStripItemAlignment.Right;
		this.tsWorker.Items.Add(this.toolStripLabel_0);
		this.mnuClipboard.Text = global::Globals.GMain.mnuLWClipboard.Text;
		this.mnuShell.Text = global::Globals.GMain.mnuLWShell.Text;
		this.btnStart.Text = global::Globals.GMain.btnStart.Text;
		this.btnSelectAll.Text = global::Globals.GMain.mnuLWSelectAll.Text;
		this.btnDeleteUnCheckeds.Text = global::Globals.GMain.mnuLWRemove.Text;
		this.lvwUnCheckeds.SmallImageList = global::Globals.GMain.imgData;
		this.lvwUnCheckeds.Visible = false;
		this.Text = global::Globals.GMain.mnuLWReExploiter.Text + " " + global::Globals.FormatNumbers(global::Globals.GMain.dtgSQLi.SelectedRows.Count, true);
		global::Globals.AddMouseMoveForm(this);
	}

	// Token: 0x17000334 RID: 820
	// (get) Token: 0x06000A88 RID: 2696 RVA: 0x000065CF File Offset: 0x000047CF
	// (set) Token: 0x06000A89 RID: 2697 RVA: 0x000065D7 File Offset: 0x000047D7
	internal virtual ToolStrip tsWorker { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

	// Token: 0x17000335 RID: 821
	// (get) Token: 0x06000A8A RID: 2698 RVA: 0x000065E0 File Offset: 0x000047E0
	// (set) Token: 0x06000A8B RID: 2699 RVA: 0x00041B54 File Offset: 0x0003FD54
	internal virtual ToolStripButton btnStart
	{
		[CompilerGenerated]
		get
		{
			return this._btnStart;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_1);
			ToolStripButton btnStart = this._btnStart;
			if (btnStart != null)
			{
				btnStart.Click -= value2;
			}
			this._btnStart = value;
			btnStart = this._btnStart;
			if (btnStart != null)
			{
				btnStart.Click += value2;
			}
		}
	}

	// Token: 0x17000336 RID: 822
	// (get) Token: 0x06000A8C RID: 2700 RVA: 0x000065E8 File Offset: 0x000047E8
	// (set) Token: 0x06000A8D RID: 2701 RVA: 0x00041B98 File Offset: 0x0003FD98
	internal virtual ListViewExt lvwUnCheckeds
	{
		[CompilerGenerated]
		get
		{
			return this._lvwUnCheckeds;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_2);
			ListViewExt lvwUnCheckeds = this._lvwUnCheckeds;
			if (lvwUnCheckeds != null)
			{
				lvwUnCheckeds.SelectedIndexChanged -= value2;
			}
			this._lvwUnCheckeds = value;
			lvwUnCheckeds = this._lvwUnCheckeds;
			if (lvwUnCheckeds != null)
			{
				lvwUnCheckeds.SelectedIndexChanged += value2;
			}
		}
	}

	// Token: 0x17000337 RID: 823
	// (get) Token: 0x06000A8E RID: 2702 RVA: 0x000065F0 File Offset: 0x000047F0
	// (set) Token: 0x06000A8F RID: 2703 RVA: 0x00041BDC File Offset: 0x0003FDDC
	internal virtual ToolStripButton btnDeleteUnCheckeds
	{
		[CompilerGenerated]
		get
		{
			return this._btnDeleteUnCheckeds;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_4);
			ToolStripButton btnDeleteUnCheckeds = this._btnDeleteUnCheckeds;
			if (btnDeleteUnCheckeds != null)
			{
				btnDeleteUnCheckeds.Click -= value2;
			}
			this._btnDeleteUnCheckeds = value;
			btnDeleteUnCheckeds = this._btnDeleteUnCheckeds;
			if (btnDeleteUnCheckeds != null)
			{
				btnDeleteUnCheckeds.Click += value2;
			}
		}
	}

	// Token: 0x17000338 RID: 824
	// (get) Token: 0x06000A90 RID: 2704 RVA: 0x000065F8 File Offset: 0x000047F8
	// (set) Token: 0x06000A91 RID: 2705 RVA: 0x00006600 File Offset: 0x00004800
	internal virtual ToolStripLabel lblStatus { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

	// Token: 0x17000339 RID: 825
	// (get) Token: 0x06000A92 RID: 2706 RVA: 0x00006609 File Offset: 0x00004809
	// (set) Token: 0x06000A93 RID: 2707 RVA: 0x00006611 File Offset: 0x00004811
	internal virtual ToolStripSeparator btnSP { get; [MethodImpl(MethodImplOptions.Synchronized)] set; }

	// Token: 0x1700033A RID: 826
	// (get) Token: 0x06000A94 RID: 2708 RVA: 0x0000661A File Offset: 0x0000481A
	// (set) Token: 0x06000A95 RID: 2709 RVA: 0x00041C20 File Offset: 0x0003FE20
	internal virtual ToolStripButton btnSelectAll
	{
		[CompilerGenerated]
		get
		{
			return this._btnSelectAll;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_3);
			ToolStripButton btnSelectAll = this._btnSelectAll;
			if (btnSelectAll != null)
			{
				btnSelectAll.Click -= value2;
			}
			this._btnSelectAll = value;
			btnSelectAll = this._btnSelectAll;
			if (btnSelectAll != null)
			{
				btnSelectAll.Click += value2;
			}
		}
	}

	// Token: 0x1700033B RID: 827
	// (get) Token: 0x06000A96 RID: 2710 RVA: 0x00006622 File Offset: 0x00004822
	// (set) Token: 0x06000A97 RID: 2711 RVA: 0x00041C64 File Offset: 0x0003FE64
	internal virtual ContextMenuStrip mnuReCheck
	{
		[CompilerGenerated]
		get
		{
			return this._mnuChecked;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			CancelEventHandler value2 = new CancelEventHandler(this.method_5);
			ContextMenuStrip mnuChecked = this._mnuChecked;
			if (mnuChecked != null)
			{
				mnuChecked.Opening -= value2;
			}
			this._mnuChecked = value;
			mnuChecked = this._mnuChecked;
			if (mnuChecked != null)
			{
				mnuChecked.Opening += value2;
			}
		}
	}

	// Token: 0x1700033C RID: 828
	// (get) Token: 0x06000A98 RID: 2712 RVA: 0x0000662A File Offset: 0x0000482A
	// (set) Token: 0x06000A99 RID: 2713 RVA: 0x00041CA8 File Offset: 0x0003FEA8
	internal virtual ToolStripMenuItem mnuClipboard
	{
		[CompilerGenerated]
		get
		{
			return this._mnuClipboard;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_6);
			ToolStripMenuItem mnuClipboard = this._mnuClipboard;
			if (mnuClipboard != null)
			{
				mnuClipboard.Click -= value2;
			}
			this._mnuClipboard = value;
			mnuClipboard = this._mnuClipboard;
			if (mnuClipboard != null)
			{
				mnuClipboard.Click += value2;
			}
		}
	}

	// Token: 0x1700033D RID: 829
	// (get) Token: 0x06000A9A RID: 2714 RVA: 0x00006632 File Offset: 0x00004832
	// (set) Token: 0x06000A9B RID: 2715 RVA: 0x00041CEC File Offset: 0x0003FEEC
	internal virtual ToolStripMenuItem mnuShell
	{
		[CompilerGenerated]
		get
		{
			return this._mnuShell;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_7);
			ToolStripMenuItem mnuShell = this._mnuShell;
			if (mnuShell != null)
			{
				mnuShell.Click -= value2;
			}
			this._mnuShell = value;
			mnuShell = this._mnuShell;
			if (mnuShell != null)
			{
				mnuShell.Click += value2;
			}
		}
	}

	// Token: 0x1700033E RID: 830
	// (get) Token: 0x06000A9C RID: 2716 RVA: 0x0000663A File Offset: 0x0000483A
	// (set) Token: 0x06000A9D RID: 2717 RVA: 0x00041D30 File Offset: 0x0003FF30
	internal virtual ToolStripButton btnClose
	{
		[CompilerGenerated]
		get
		{
			return this._btnClose;
		}
		[CompilerGenerated]
		[MethodImpl(MethodImplOptions.Synchronized)]
		set
		{
			EventHandler value2 = new EventHandler(this.method_9);
			ToolStripButton btnClose = this._btnClose;
			if (btnClose != null)
			{
				btnClose.Click -= value2;
			}
			this._btnClose = value;
			btnClose = this._btnClose;
			if (btnClose != null)
			{
				btnClose.Click += value2;
			}
		}
	}

	// Token: 0x1700033F RID: 831
	// (get) Token: 0x06000A9E RID: 2718 RVA: 0x00006642 File Offset: 0x00004842
	// (set) Token: 0x06000A9F RID: 2719 RVA: 0x0000664A File Offset: 0x0000484A
	public int Count { get; set; }

	// Token: 0x17000340 RID: 832
	// (get) Token: 0x06000AA0 RID: 2720 RVA: 0x00006653 File Offset: 0x00004853
	// (set) Token: 0x06000AA1 RID: 2721 RVA: 0x0000665B File Offset: 0x0000485B
	public bool CanClose { get; set; }

	// Token: 0x06000AA2 RID: 2722 RVA: 0x00041D74 File Offset: 0x0003FF74
	public void Add(DataGridViewRow o)
	{
		checked
		{
			if (base.InvokeRequired)
			{
				base.Invoke(new ReExploiter.Delegate41(this.Add), new object[]
				{
					o
				});
			}
			else if (global::Globals.GMain.Boolean_1)
			{
				ListViewItem listViewItem = new ListViewItem(o.Cells[1].Value.ToString());
				DataGridViewCell dataGridViewCell;
				object[] array;
				bool[] array2;
				NewLateBinding.LateCall(listViewItem.SubItems, null, "Add", array = new object[]
				{
					(dataGridViewCell = o.Cells[2]).Value
				}, null, null, array2 = new bool[]
				{
					true
				}, true);
				if (array2[0])
				{
					dataGridViewCell.Value = RuntimeHelpers.GetObjectValue(RuntimeHelpers.GetObjectValue(array[0]));
				}
				this.method_0(listViewItem, Conversions.ToString(o.Cells[5].Value));
				listViewItem.Tag = o;
				this.lvwUnCheckeds.Items.Add(listViewItem);
				this.btnSelectAll.Enabled = true;
				this.Count++;
				this.lblStatus.Text = global::Globals.FormatNumbers(this.Count, true);
			}
		}
	}

	// Token: 0x06000AA3 RID: 2723 RVA: 0x00041E94 File Offset: 0x00040094
	private void method_0(ListViewItem listViewItem_0, string string_0)
	{
		int num;
		int num4;
		object obj;
		try
		{
			IL_02:
			ProjectData.ClearProjectError();
			num = -2;
			IL_0A:
			int num2 = 2;
			string text = listViewItem_0.Text;
			IL_13:
			num2 = 3;
			if (!(string_0.Contains("[") & string_0.Contains("]")))
			{
				goto IL_45;
			}
			IL_2E:
			num2 = 4;
			string text2 = string_0.Substring(1, checked(string_0.IndexOf("]") - 1));
			IL_45:
			num2 = 6;
			if (!string.IsNullOrEmpty(text2))
			{
				goto IL_68;
			}
			IL_4F:
			num2 = 7;
			text2 = "??";
			IL_57:
			num2 = 8;
			string_0 = global::Globals.G_DataGP.CountryNameByCode(text2);
			IL_68:
			num2 = 10;
			if (!text2.Equals("??") && !text2.Equals("EU"))
			{
				goto IL_98;
			}
			IL_88:
			num2 = 11;
			listViewItem_0.ImageKey = "--.png";
			goto IL_B1;
			IL_98:
			num2 = 13;
			listViewItem_0.ImageKey = text2.ToLower() + ".png";
			IL_B1:
			goto IL_147;
			IL_B6:
			int num3 = num4 + 1;
			num4 = 0;
			@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], num3);
			IL_100:
			goto IL_13C;
			IL_102:
			num4 = num2;
			@switch(ICSharpCode.Decompiler.ILAst.ILLabel[], (num > -2) ? num : 1);
			IL_11A:;
		}
		catch when (endfilter(obj is Exception & num != 0 & num4 == 0))
		{
			Exception ex = (Exception)obj2;
			goto IL_102;
		}
		IL_13C:
		throw ProjectData.CreateProjectError(-2146828237);
		IL_147:
		if (num4 != 0)
		{
			ProjectData.ClearProjectError();
		}
	}

	// Token: 0x06000AA4 RID: 2724 RVA: 0x0004200C File Offset: 0x0004020C
	private void ReExploiter_Load(object sender, EventArgs e)
	{
		Class50.smethod_2(this, null);
		global::Globals.AddMouseMoveForm(this);
		this.lvwUnCheckeds.Columns.Add(global::Globals.GMain.dtgSQLi.Columns[1].HeaderText).Width = 350;
		this.lvwUnCheckeds.Columns.Add(global::Globals.GMain.dtgSQLi.Columns[2].HeaderText).Width = 100;
		this.lvwUnCheckeds.SmallImageList = global::Globals.GMain.imgData;
		this.btnDeleteUnCheckeds.Visible = false;
		this.btnSP.Visible = false;
		this.btnSelectAll.Visible = false;
	}

	// Token: 0x06000AA5 RID: 2725 RVA: 0x00006664 File Offset: 0x00004864
	private void ReExploiter_FormClosing(object sender, FormClosingEventArgs e)
	{
		e.Cancel = !this.CanClose;
		if (this.CanClose)
		{
			Class50.smethod_3(this, null);
			this.lvwUnCheckeds.Items.Clear();
		}
	}

	// Token: 0x06000AA6 RID: 2726 RVA: 0x000420C4 File Offset: 0x000402C4
	private void method_1(object sender, EventArgs e)
	{
		this.btnDeleteUnCheckeds.Visible = true;
		this.btnSP.Visible = true;
		this.btnSelectAll.Visible = true;
		this.numericUpDown_0.Visible = false;
		this.toolStripLabel_0.Visible = false;
		this.btnStart.Visible = false;
		this.btnClose.Visible = true;
		this.lblStatus.Visible = true;
		this.method_2(null, null);
		global::Globals.GMain.numThreads.Value = this.numericUpDown_0.Value;
		global::Globals.GMain.method_15();
	}

	// Token: 0x06000AA7 RID: 2727 RVA: 0x00006697 File Offset: 0x00004897
	private void method_2(object sender, EventArgs e)
	{
		this.btnDeleteUnCheckeds.Enabled = (this.lvwUnCheckeds.SelectedItems.Count > 0 & !this.bool_1);
	}

	// Token: 0x06000AA8 RID: 2728 RVA: 0x000066C1 File Offset: 0x000048C1
	private void method_3(object sender, EventArgs e)
	{
		global::Globals.SelectAllItemsLVW(this.lvwUnCheckeds);
	}

	// Token: 0x06000AA9 RID: 2729 RVA: 0x00042160 File Offset: 0x00040360
	private void method_4(object sender, EventArgs e)
	{
		this.bool_1 = true;
		this.btnDeleteUnCheckeds.Enabled = false;
		this.Cursor = Cursors.WaitCursor;
		new Thread(new ThreadStart(this.method_8))
		{
			IsBackground = true
		}.Start();
	}

	// Token: 0x06000AAA RID: 2730 RVA: 0x000066CE File Offset: 0x000048CE
	private void method_5(object sender, CancelEventArgs e)
	{
		e.Cancel = (this.lvwUnCheckeds.SelectedItems.Count == 0);
	}

	// Token: 0x06000AAB RID: 2731 RVA: 0x000421AC File Offset: 0x000403AC
	private void method_6(object sender, EventArgs e)
	{
		try
		{
			Clipboard.SetText(this.lvwUnCheckeds.SelectedItems[0].Text);
		}
		catch (Exception ex)
		{
			Interaction.MsgBox(ex.Message, MsgBoxStyle.OkOnly, null);
		}
	}

	// Token: 0x06000AAC RID: 2732 RVA: 0x00042204 File Offset: 0x00040404
	private void method_7(object sender, EventArgs e)
	{
		try
		{
			global::Globals.ShellUrl(this.lvwUnCheckeds.SelectedItems[0].Text);
		}
		catch (Exception ex)
		{
			Interaction.MsgBox(ex.Message, MsgBoxStyle.OkOnly, null);
		}
	}

	// Token: 0x06000AAD RID: 2733 RVA: 0x0004225C File Offset: 0x0004045C
	private void method_8()
	{
		if (base.InvokeRequired)
		{
			base.Invoke(new ReExploiter.Delegate42(this.method_8));
		}
		else
		{
			try
			{
				global::Globals.LockWindowUpdate(this.lvwUnCheckeds.Handle);
				List<DataGridViewRow> list = new List<DataGridViewRow>();
				while (this.lvwUnCheckeds.SelectedItems.Count > 0)
				{
					list.Add((DataGridViewRow)this.lvwUnCheckeds.SelectedItems[0].Tag);
					this.lvwUnCheckeds.Items.RemoveAt(0);
				}
				global::Globals.DG_SQLi.method_2(list);
				global::Globals.LockWindowUpdate(IntPtr.Zero);
			}
			catch (Exception ex)
			{
				Interaction.MsgBox(ex.Message, MsgBoxStyle.OkOnly, null);
			}
			finally
			{
				this.bool_1 = false;
				this.method_2(null, null);
				this.lblStatus.Text = global::Globals.FormatNumbers(this.lvwUnCheckeds.Items.Count, true);
				this.Cursor = Cursors.Default;
			}
		}
	}

	// Token: 0x06000AAE RID: 2734 RVA: 0x000066E9 File Offset: 0x000048E9
	private void method_9(object sender, EventArgs e)
	{
		base.Close();
	}

	// Token: 0x04000538 RID: 1336
	[CompilerGenerated]
	[AccessedThroughProperty("mnuReCheck")]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private ContextMenuStrip _mnuChecked;

	// Token: 0x0400053C RID: 1340
	private NumericUpDown numericUpDown_0;

	// Token: 0x0400053D RID: 1341
	private ToolStripLabel toolStripLabel_0;

	// Token: 0x0400053E RID: 1342
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	[CompilerGenerated]
	private int int_0;

	// Token: 0x0400053F RID: 1343
	[CompilerGenerated]
	[DebuggerBrowsable(DebuggerBrowsableState.Never)]
	private bool bool_0;

	// Token: 0x04000540 RID: 1344
	private bool bool_1;

	// Token: 0x020000B8 RID: 184
	// (Invoke) Token: 0x06000AB2 RID: 2738
	private delegate void Delegate41(DataGridViewRow o);

	// Token: 0x020000B9 RID: 185
	// (Invoke) Token: 0x06000AB6 RID: 2742
	private delegate void Delegate42();
}
